apiVersion: apps/v1
kind: Deployment
metadata:
  name: word-filter-frontend
  namespace: word-filter-app
  labels:
    app: word-filter-frontend
    component: web
    cloud-provider: civo
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: word-filter-frontend
  template:
    metadata:
      labels:
        app: word-filter-frontend
        component: web
        cloud-provider: civo
      annotations:
        prometheus.io/scrape: "false"  # Frontend doesn't expose metrics
    spec:
      containers:
      - name: frontend
        image: phanivikranth/word-filter-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        
        # Environment variables for API endpoint
        env:
        - name: API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: word-filter-config
              key: API_BASE_URL
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: word-filter-config
              key: ENVIRONMENT
        
        # Resource limits optimized for Civo
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        
        # Volume mounts for nginx
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-pid
          mountPath: /var/run
        - name: nginx-tmp
          mountPath: /tmp
      
      # Security context for pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      
      # Volumes
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-pid
        emptyDir: {}
      - name: nginx-tmp
        emptyDir: {}
      
      # Restart policy
      restartPolicy: Always
      
      # Node selection
      nodeSelector:
        kubernetes.io/arch: amd64
      
      # Pod anti-affinity for better distribution
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - word-filter-frontend
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: word-filter-frontend
  namespace: word-filter-app
  labels:
    app: word-filter-frontend
    component: web
    cloud-provider: civo
  annotations:
    service.beta.kubernetes.io/civo-load-balancer-protocol: "http"
    service.beta.kubernetes.io/civo-load-balancer-algorithm: "round_robin"
spec:
  type: LoadBalancer  # Civo supports LoadBalancer services
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: word-filter-frontend
  sessionAffinity: None
